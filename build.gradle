buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'tt432'
version = '1.18.2-1-2'

java {
    archivesBaseName = 'millennium'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: '2022.07.03-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'millennium'

            mods {
                millennium {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'millennium'

            mods {
                millennium {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'millennium'

            mods {
                millennium {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'millennium', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                millennium {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "millennium.refmap.json"

    config "millennium.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

project.ext.lwjglVersion = "3.2.2"
project.ext.lwjglNatives = "natives-windows"

configurations {
    shade
    implementation.extendsFrom shade
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    //mavenCentral()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.54'

    //shade "org.lwjgl:lwjgl-assimp:$lwjglVersion"
    //runtimeOnly "org.lwjgl:lwjgl-assimp:$lwjglVersion:$lwjglNatives"

    implementation fg.deobf("curse.maven:mcgltf-591547:3779702")

    implementation fg.deobf("mezz.jei:jei-1.18.2-forge:10.1.0.208")

    //implementation fg.deobf("curse.maven:modernui-352491:3765945")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "millennium",
                "Specification-Vendor"    : "DustW",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "DustW",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    into('lib') {
        from configurations.shade
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

jar.finalizedBy('reobfJar')